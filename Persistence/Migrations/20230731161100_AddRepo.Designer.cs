// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230731161100_AddRepo")]
    partial class AddRepo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverPath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Domain.Entities.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("About")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AvatarPath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1688cc79-6d02-4fb5-a83e-93dc6bf229de"),
                            About = "",
                            AvatarPath = "/contents/",
                            Name = "Billie Eilish"
                        },
                        new
                        {
                            Id = new Guid("884a2098-09e6-4eeb-bc1a-63e9fbb90414"),
                            About = "",
                            AvatarPath = "/contents/",
                            Name = "Harry Style"
                        },
                        new
                        {
                            Id = new Guid("bfdf22c7-1bde-4dfc-bcc2-f7c61a00ec2c"),
                            About = "",
                            AvatarPath = "/contents/",
                            Name = "The Weeknd"
                        },
                        new
                        {
                            Id = new Guid("bfcc171c-def2-4aeb-a3a1-5683d3d92ddb"),
                            About = "",
                            AvatarPath = "/contents/",
                            Name = "Ariana Grande"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("effdd9d5-d29d-4451-9031-ba7d5f82b203"),
                            Name = "R&B"
                        },
                        new
                        {
                            Id = new Guid("0091cd54-a937-47ea-afa5-c7d3e3b5110b"),
                            Name = "Pop"
                        },
                        new
                        {
                            Id = new Guid("26667b92-df3a-4dfa-9290-0e9bd13742d2"),
                            Name = "Rock"
                        },
                        new
                        {
                            Id = new Guid("1aff3bd4-5765-450b-8822-064f718f7708"),
                            Name = "Country"
                        },
                        new
                        {
                            Id = new Guid("684f6426-cc1c-4fbd-98ef-0c77f3957ffc"),
                            Name = "Rap"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GenreSong", b =>
                {
                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SongId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GenreSongs");

                    b.HasData(
                        new
                        {
                            SongId = new Guid("a9e3a68a-8b25-47fa-aa40-8609f3f1171f"),
                            GenreId = new Guid("effdd9d5-d29d-4451-9031-ba7d5f82b203")
                        },
                        new
                        {
                            SongId = new Guid("a3ecf920-f5bd-4fc1-91da-e8078cbed599"),
                            GenreId = new Guid("0091cd54-a937-47ea-afa5-c7d3e3b5110b")
                        },
                        new
                        {
                            SongId = new Guid("2566688b-0f41-4e42-bc7d-39cbb172acfd"),
                            GenreId = new Guid("0091cd54-a937-47ea-afa5-c7d3e3b5110b")
                        },
                        new
                        {
                            SongId = new Guid("2566688b-0f41-4e42-bc7d-39cbb172acfd"),
                            GenreId = new Guid("1aff3bd4-5765-450b-8822-064f718f7708")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AudioPath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CoverPath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9e3a68a-8b25-47fa-aa40-8609f3f1171f"),
                            AudioPath = "",
                            CoverPath = "",
                            Duration = "0",
                            Name = "Happier Than Ever",
                            ReleaseDate = new DateTime(2023, 7, 31, 23, 10, 59, 633, DateTimeKind.Local).AddTicks(8275)
                        },
                        new
                        {
                            Id = new Guid("a3ecf920-f5bd-4fc1-91da-e8078cbed599"),
                            AudioPath = "",
                            CoverPath = "",
                            Duration = "0",
                            Name = "Blinding Lights",
                            ReleaseDate = new DateTime(2023, 7, 31, 23, 10, 59, 633, DateTimeKind.Local).AddTicks(8289)
                        },
                        new
                        {
                            Id = new Guid("2566688b-0f41-4e42-bc7d-39cbb172acfd"),
                            AudioPath = "",
                            CoverPath = "",
                            Duration = "0",
                            Name = "Save Your Tears(Remix)",
                            ReleaseDate = new DateTime(2023, 7, 31, 23, 10, 59, 633, DateTimeKind.Local).AddTicks(8289)
                        });
                });

            modelBuilder.Entity("Domain.Entities.SongArtist", b =>
                {
                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ArtistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("SongArtist");

                    b.HasData(
                        new
                        {
                            ArtistId = new Guid("1688cc79-6d02-4fb5-a83e-93dc6bf229de"),
                            SongId = new Guid("a9e3a68a-8b25-47fa-aa40-8609f3f1171f")
                        },
                        new
                        {
                            ArtistId = new Guid("bfdf22c7-1bde-4dfc-bcc2-f7c61a00ec2c"),
                            SongId = new Guid("a3ecf920-f5bd-4fc1-91da-e8078cbed599")
                        },
                        new
                        {
                            ArtistId = new Guid("bfdf22c7-1bde-4dfc-bcc2-f7c61a00ec2c"),
                            SongId = new Guid("2566688b-0f41-4e42-bc7d-39cbb172acfd")
                        },
                        new
                        {
                            ArtistId = new Guid("bfcc171c-def2-4aeb-a3a1-5683d3d92ddb"),
                            SongId = new Guid("2566688b-0f41-4e42-bc7d-39cbb172acfd")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Album", b =>
                {
                    b.HasOne("Domain.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Domain.Entities.GenreSong", b =>
                {
                    b.HasOne("Domain.Entities.Genre", "Genre")
                        .WithMany("GenreSongs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Song", "Song")
                        .WithMany("GenreSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Domain.Entities.Song", b =>
                {
                    b.HasOne("Domain.Entities.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Domain.Entities.SongArtist", b =>
                {
                    b.HasOne("Domain.Entities.Artist", "Artist")
                        .WithMany("SongArist")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Song", "Song")
                        .WithMany("SongArtists")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Domain.Entities.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Domain.Entities.Artist", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("SongArist");
                });

            modelBuilder.Entity("Domain.Entities.Genre", b =>
                {
                    b.Navigation("GenreSongs");
                });

            modelBuilder.Entity("Domain.Entities.Song", b =>
                {
                    b.Navigation("GenreSongs");

                    b.Navigation("SongArtists");
                });
#pragma warning restore 612, 618
        }
    }
}
